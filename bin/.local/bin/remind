#!/usr/bin/env bash
# ==============================================================================
# Script Name: remind
# Description: After some period of time, send a notification, play a sound,
#              and ping a KDE Connect device
# Usage: remind [OPTIONS] <delay> <message>
# Author: Danny Harris
# Dependencies: kdeconnect-cli, paplay, notify-send
# ==============================================================================

show_help() {
	cat <<EOF
Usage: $(basename "$0") [-l | list] [-c | cancel] <delay> <message>

Description:
  After some period of time, send a notification, play a sound, and ping a
  KDE Connect device.

Options:
  -l, list    list active reminders
  -c, cancel  cancel active reminders
EOF
}

remind() {
	# List active reminders
	if [[ "$1" == "list" || "$1" == "-l" ]]; then
		# Get timer data
		local timers
		timers=$(systemctl --user list-timers --no-pager --no-legend | awk '{print $NF}' | grep remind- || true)

		# Check for reminders, then list them
		if [[ -n "$timers" ]]; then
			echo "Active Reminders:"
			systemctl --user list-timers --no-pager --all 'remind-*'
			for timer in $timers; do
				echo "$timer"
				echo "        $(systemctl --user show "$timer" --property Description --value | sed 's/^[^ ]* [^ ]*//')"
			done
		else
			echo "No active reminders"
		fi
		return 0
	fi

	# Cancel all reminders
	if [[ $# -eq 1 && ("$1" == "cancel" || "$1" == "-c") ]]; then
		# Get timer data
		local timers
		timers=$(systemctl --user list-timers --no-pager --no-legend | awk '{print $NF}' | grep remind-)

		# Check for reminders, then cancel them all
		if [[ -n "$timers" ]]; then
			local services
			services=$(echo "$timers" | sed 's/\.service$/.timer/')

			echo "$timers $services" | xargs -r systemctl --user stop
			systemctl --user reset-failed

			echo "All reminders cancelled"
		else
			echo "No active reminders to cancel"
		fi
		return 0
	fi

	# Initialize arguments
	local delay="$1"
	shift
	local message="$*"

	# Check for valid arguments
	if [[ -z "$message" ]]; then
		show_help
		return 1
	fi

	# Set up a systemd timer unit name
	local unit_name
	unit_name="remind-$(date +%s%N)"

	# Create a systemd timer unit that: sends a notification, plays a sound, and pings a KDE Connect device
	systemd-run --user --on-active="$delay" --timer-property=AccuracySec=1s --unit="$unit_name" --quiet \
		bash -c "notify-send --icon=clock --urgency=critical --app-name=Reminder '$message' && \
		paplay /usr/share/sounds/freedesktop/stereo/complete.oga && \
		kdeconnect-cli --ping-msg '$message' -n HERMES && \
		kdeconnect-cli --ping-msg '$message' -d 'e988ac39f25149468a36d54f265c521f'" &&
		echo -e "Reminder set for $delay: '$message'\n\nUnit name: $unit_name" ||
		echo "Valid arguments: remind <delay> <message>"
}

remind "$@"

# vim: set ft=sh:
