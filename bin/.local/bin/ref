#!/usr/bin/env zsh
# ==============================================================================
# Script Name: ref
# Description: create or view reference notes in obsidian vault
# Usage: ref [<note name>]
# Author: Danny Harris
# Dependencies: fzfc, neovim, fd
# ==============================================================================

# -e: exit on error, -u: treat unset variables as errors, -o pipefail: pipe will fail if any command fails
set -euo pipefail

# set global variables
NOTES_DIR="$HOME/Elysium/Obsidian Vault/Notes/Reference/"

# default fzf options
fzf_opts=(
    --prompt "Select a note: "
    --preview "printf \"%s\" \"$NOTES_DIR{}.md\" | xargs -I _ bat --color always --style plain _"
    --header 'Delete: ctrl-x    Add New: ctrl-a    Preview: alt-p, alt-u/d    Copy: ctrl-y'
    --height '100%'
    --bind "ctrl-x:execute(printf \"%s\" \"$NOTES_DIR{}.md\" | xargs -I _ rm _)+exclude"
    --bind "ctrl-a:execute(printf \"%s\" '$NOTES_DIR{q}.md' | xargs -I _ nvim _ -c \"norm i# \$(echo {q} | sed \"s/^'//; s/'$//\")gogoG\")+change-query(NULL)+print-query"
    --bind "enter:accept-or-print-query"
)

# exit if notes dir doesn't exist
if [[ ! -d "$NOTES_DIR" ]]; then
    printf "%s\n" "error: directory doesn't exist: $NOTES_DIR" >&2
    exit 1
fi

# if no arguments, list notes
if [ $# -eq 0 ]; then
    # select note to edit or create
    selected_note="$(
        fd --absolute-path --extension md --type f . "$NOTES_DIR" |
            sed "s|^$NOTES_DIR||; s|.md$||" |
            fzfc "${fzf_opts[@]}" || printf ""
    )"

    # exit if no note is selected
    if [[ -z "$selected_note" ]]; then
        printf "%s\n" "note selection cancelled"
        exit 0
    fi

    # exit if selected note is named NULL (for creating new notes within fzf)
    if [[ "$selected_note" == "NULL" ]]; then
        exit 0
    fi

    # create new note if selected note doesn't exit
    if [[ ! -f "$NOTES_DIR/$selected_note.md" ]]; then
        nvim "$NOTES_DIR/$selected_note.md" -c "norm i# $selected_notegogoG"
        exit 0
    fi

    # open selected note
    nvim "$NOTES_DIR/$selected_note.md"
    exit 0
fi

# show help
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    printf "%s\n" "usage: ref [<note name>]"
    printf "%s\n" "create or view reference notes"
    exit 0
fi

# create a new note if arguments are provided
nvim "$NOTES_DIR/$*.md" -c "norm i# $*gogoG"

# vim: set ft=sh:
