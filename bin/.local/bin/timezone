#!/usr/bin/env bash
# ==============================================================================
# Script Name: timezone
# Description: datetime conversion with fuzzy found timezone selection
# Usage: timezone [-h|--help] [-t|--timezone] [-c|--convert] [<datetime>]
# Author: Danny Harris
# Dependencies: fzf, timedatectl
# ==============================================================================

# -e: exit on error, -u: treat unset variables as errors, -o pipefail: pipe will fail if any command fails
set -euo pipefail

# set variables
args="$*"
tz_query=""
convert=false
date_format='+%Y-%m-%d %-I:%M %p %Z'

show-help() {
	cat <<-EOF
		Usage: timezone [-h|--help] [-t|--timezone] [-c|--convert] [<datetime>]

		Options:
		  -h, --help      Show this help message
		  -t, --timezone  Set timezone to convert to/from
		  -c, --convert   Convert datetime to local time

		Note: GMT offsets are reversed in sign to how you might expect: e.g. Etc/GMT+5 is UTC-5.
	EOF
}

# parse options
while [[ "$#" -gt 0 ]]; do
	case $1 in
	-t | --timezone)
		if [ "$2" ]; then
			tz_query="$2"
			args=$(printf "%s" "$args" | sed "s/$1\s\+$2//g")
		else
			printf 'ERROR: Missing argument for %s\n' "$1" >&2
			exit 1
		fi
		shift
		;;
	-c | --convert)
		convert=true
		args=$(printf "%s" "$args" | sed "s/$1//g")
		;;
	-h | --help)
		show-help
		exit 0
		;;
	-?*)
		printf 'ERROR: Unknown option: %s\n' "$1" >&2
		exit 1
		;;
	esac

	shift
done

TZ_SELECTED=$(timedatectl list-timezones | fzf --query "$tz_query" --exit-0 --select-1 || printf "")
TZ_SYSTEM=$(timedatectl status | grep "Time zone" | awk '{print $3}')
get-time() {
	date -d "${args:-now}"
}
if [[ $convert == true ]]; then
	# date -d "$(get-time)" "$DATE_FORMAT"
	if [[ -n $args ]]; then
		TZ="${TZ_SELECTED:-$TZ_SYSTEM}" date -d "$(get-time)" "$date_format"
	else
		printf 'ERROR: Missing datetime argument needed for conversion\n' >&2
		show-help >&2
	fi
else
	TZ="${TZ_SELECTED:-$TZ_SYSTEM}" get-time "$date_format"
fi

# vim: set ft=sh:
