# H1: Renamed Commands
alias copy="wl-copy"
alias ai="aichat"
alias t="tmux"
alias n="nvim"
alias c="clear"

# H1: Preset Flags
alias ll="eza -hlF --icons --no-permissions --no-user --group-directories-first --time-style relative"
alias lla="eza -halF --icons --no-user --group-directories-first --time-style relative"
alias lt="eza -T --icons --group-directories-first"
alias dufc="duf --hide-fs squashfs --hide-mp /boot,/boot/efi,/" # Disk usage
alias rsyncc="rsync -havP"
alias install="sudo dnf install"
alias remove="sudo dnf remove"
alias search="sudo dnf search"
alias ne="nvim -c 'OilPreview'"
alias afk="cmatrix -s -C blue"                                     # Matrix AFK screen
alias status_code="curl -s -m 5 -o /dev/null -w '%{http_code}' -L" # Get status code of a website
alias datec="date '+%Y-%m-%d' -d"
alias timec="date '+%-I:%M %p' -d"
alias datetimec="date '+%Y-%m-%d %-I:%M %p' -d"
alias ail="aichat -r linux"

# H1: Preset Commands w/ Parameters
alias aliases="bat --style plain ~/.config/.aliases" # List aliases
alias ea="nvim ~/.config/.aliases"                   # Edit aliases
alias lsblkc="lsblk -Mpo LABEL,NAME,FSTYPE,SIZE,FSAVAIL,FSUSE%,MOUNTPOINT -e7"
alias fl="flatpak list --app --columns=size,application,version,name | tr -d ' ' | sort -hr | column -t | bat --style plain" # list flatpaks installed sorted by size
alias now="date '+%-I:%M %p' | tee >(copy -n)"
alias today="date '+%Y-%m-%d' | tee >(copy -n)"
alias datetime="date '+%Y-%m-%d %-I:%M %p' | tee >(copy -n)"
alias lock="loginctl lock-session 2"
alias unlock="loginctl unlock-session 2"
alias playpause="playerctl play-pause"
alias weather="curl -s -m 3 'https://wttr.in/mesquite?Q'"
alias mnt-olympus="mountpoint -q /mnt/OLYMPUS && echo 'Already mounted' || sshfs -o allow_other,follow_symlinks,reconnect,default_permissions danny@olympus:/home/danny/ /mnt/OLYMPUS"
alias umnt-olympus="umount /mnt/OLYMPUS"
alias daily="flatpak run com.vivaldi.Vivaldi --new-window https://timeguessr.com https://monkeytype.com && nvim -c 'VimBeGood'"
alias dailynote='n ~/Elysium/Obsidian\ Vault/Notes/Daily/$(today).md'
alias {q,quick,nq,eq,note}="nvim -c 'e ~/Elysium/Obsidian\\ Vault/Quick\\ Note.md'"
alias todo="n ~/Elysium/Obsidian\ Vault/To-Do.md"

# H1: General Functions
# H2: Print general help information -------------- 80 char max -------------- #
help() {
    bat -l md --style plain <<"EOF"
▁▁▁▁▁▁
▏HELP▕
▔▔▔▔▔▔
# GENERAL
**OS:**         Fedora Linux 40
**DE:**         KDE Plasma 6.1.1
**IP:**         *ATLAS:* 192.168.1.89   *OLYMPUS:* 192.168.1.179    *ATLANTIS:* 192.168.1.___

# TERMINAL TOOLS
`fzfc`          fuzzy search
`lsblkc`        list block devices
`b`             bookmarked directories
`mnt-`...       mount various storage devices e.g. `mnt-olympus`
`fc`            open last command in editor, quitting with `:cq` will cancel
`cdi`           runs zoxide interactive window to fuzzy search directories
`yy`,`e`        open yazi file explorer with automatic cd on quit
`atool`         archiving tool (`-l` list, `-x` extract, `-a` add)
`magick`        image conversion tool (filetypes, sizes, effects, etc.)
`navi`          interactive cli cheatsheet (`navi fn welcome` for cheatsheet)

# OTHER NOTABLE COMMANDS
`fkill`, `weather`, `dufc`, `rsyncc`, `f`, `ff`, `fu`, `fa`, `dnfc`, `color`

# ALTERNATE PRORGRAMS
`grep` -> `rg`, `find` -> `fd`, `ls` -> `eza`, `cd` -> `z (zoxide)`

# OTHER
**awesome-cli-apps**        https://github.com/agarrharr/awesome-cli-apps
EOF
}

# H1: Yazi shortcut to allow for the changing of directories after quitting
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}
alias e="yy"

# H1: Fuzzy search
# H2: Custom FZF
alias fzfc=" \
	fzf -m --prompt='⬗ ' --pointer='🞛 ' --marker='◈ ' --info=inline-right --header='Edit: ctrl-e    Open: ctrl-o    Preview: alt-p, alt-u/d    Copy: ctrl-y' --header-first \
	--color=border:#74c7ec,gutter:-1,label:#74c7ec,bg+:#313244,pointer:#74c7ec,hl:#74c7ec,hl+:#74c7ec \
    --preview='
      if [[ -d {} ]]; then
        eza -alF --tree --icons --level=2 --no-permissions --no-user --group-directories-first --no-time --no-filesize {};
      else
        case {} in
          *.tar) tar -tf {} ;;
          *.tar.gz|*.tgz) tar -tzf {} ;;
          *.tar.bz2) tar -tjf {} ;;
          *.tar.xz) tar -tJf {} ;;
          *.zip) unzip -l {} ;;
          *.rar) unrar l {} ;;
          *) bat --color=always --style=numbers --line-range=:500 {} ;;
        esac;
      fi' \
	--preview-label='╢ Preview ╟' \
	--preview-window hidden --preview-window=border \
	--bind='ctrl-d:half-page-down,ctrl-u:half-page-up,alt-d:preview-half-page-down,alt-u:preview-half-page-up,alt-p:toggle-preview,ctrl-e:execute(nvim -O {} > /dev/tty)+abort,ctrl-o:execute-silent(xdg-open {})+abort,ctrl-y:execute-silent(printf {} | cut -f 2- | wl-copy --trim-newline)' \
	"

# H2: Fuzzy search for a directory to enter
f() {
    local dir
    dir=$(fd . -d 3 -t d -H "$@" | fzfc --bind "start:toggle-preview")
    if [ -n "$dir" ]; then
        cd "$dir" || exit
    fi
}

# H2: Fuzzy search for files copy path
ff() {
    local selected_path
    selected_path=$(fd . -d 3 -t f -H "$@" | fzfc --bind "start:toggle-preview")
    if [ -n "$selected_path" ]; then
        echo -n "$selected_path" | wl-copy
        echo "$selected_path"
    fi
}

# H2: Fuzzy search for bookmarked folders
b() {
    local bookmarks=(
        ~/Elysium
        ~/Elysium/Projects
        ~/Elysium/Projects/*
        ~/Downloads
        ~/dotfiles
        ~/.config
        ~/Syncthing
        ~/Elysium/Documents
        ~/.local/bin
        /mnt/1TB\ SSD
        /mnt/1TB\ HDD
        /mnt/OLYMPUS
    )
    local selected_path
    selected_path=$(printf "%s\n" "${bookmarks[@]}" | sed 's/\/home\/danny/~/' | fzfc)
    # selected_path=$(printf "%s\n" "${bookmarks[@]}" | sed 's/\/home\/danny/~/' | fzfc)
    if [ -n "$selected_path" ]; then
        cd "$(eval echo "$selected_path")" || exit
    fi
}

# H2: Fuzzy search for parent directories to enter
fu() {
    local dir_list
    local parent_dir
    parent_dir=$(dirname "$(realpath "${1:-.}")")
    while [ "$parent_dir" != "/" ]; do
        dir_list+="\n$parent_dir"
        parent_dir=$(dirname "$parent_dir")
    done
    dir_list=$(echo "$dir_list" | sed 's/\/home\/danny/~/' | grep -v -e '^/home$' -e '^$' -e '^~$' | fzfc)
    if [ -n "$dir_list" ]; then
        cd "$(eval echo "$dir_list")" || exit
    fi
}

# H2: Fuzzy search all directories and files
fa() {
    local pathname
    pathname="$(locate "${1:-/}" | fzfc --bind "start:toggle-preview")"

    if [ -n "$pathname" ]; then
        if [ -d "$pathname" ]; then
            cd "$pathname" || exit
        elif [ -f "$pathname" ]; then
            echo -n "$pathname" | wl-copy
            echo "$pathname"
        fi
    fi
}

# H2: Fuzzy search for processes to kill
fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzfc | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzfc | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]; then
        echo $pid | xargs kill -${1:-9}
    fi
}

# H2: Fuzzy search for a package to install
dnfc() {
    local result
    result="$(dnf -qC repoquery "$@" --qf '%{name} - %{summary}' | fzfc --bind 'alt-u:half-page-up' | sed 's/ - .*//')"
    [ -n "$result" ] && sudo dnf install "$result"
}

# vim:ft=sh
